{
  "name": "aws",
  "meta": {
    "moduleFormat": "(.*)(?:/[^/]*)"
  },
  "types": {
    "aws:fsx/getOpenZfsSnapshotFilter:getOpenZfsSnapshotFilter": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the snapshot.\n",
          "language": {
            "python": {
              "mapCase": false
            }
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "language": {
            "python": {
              "mapCase": false
            }
          }
        }
      },
      "type": "object",
      "required": [
        "name",
        "values"
      ]
    },
    "aws:lambda/FunctionDeadLetterConfig:FunctionDeadLetterConfig": {
      "properties": {
        "targetArn": {
          "type": "string",
          "description": "ARN of an SNS topic or SQS queue to notify <<shortened>>RN, depending on which service is targeted.\n",
          "language": {
            "python": {
              "mapCase": false
            }
          }
        }
      },
      "type": "object",
      "required": [
        "targetArn"
      ]
    },
    "aws:lambda/FunctionEnvironment:FunctionEnvironment": {
      "properties": {
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of environment variables that are accessible from the function code during execution.\n",
          "language": {
            "python": {
              "mapCase": false
            }
          }
        }
      },
      "type": "object"
    },
    "aws:lambda/FunctionEphemeralStorage:FunctionEphemeralStorage": {
      "properties": {
        "size": {
          "type": "integer",
          "description": "The size of the Lambda function Ephemeral s<<shortened>>d the maximum supported value is `10240`MB.\n",
          "language": {
            "python": {
              "mapCase": false
            }
          }
        }
      },
      "type": "object",
      "language": {
        "nodejs": {
          "requiredOutputs": [
            "size"
          ]
        }
      }
    },
    "aws:lambda/FunctionFileSystemConfig:FunctionFileSystemConfig": {
      "properties": {
        "arn": {
          "type": "string",
          "description": "Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.\n",
          "language": {
            "python": {
              "mapCase": false
            }
          }
        },
        "localMountPath": {
          "type": "string",
          "description": "Path where the function can access the file system, starting with /mnt/.\n",
          "language": {
            "python": {
              "mapCase": false
            }
          }
        }
      },
      "type": "object",
      "required": [
        "arn",
        "localMountPath"
      ]
    },
    "aws:lambda/FunctionImageConfig:FunctionImageConfig": {
      "properties": {
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Parameters that you want to pass in with `entry_point`.\n",
          "language": {
            "python": {
              "mapCase": false
            }
          }
        },
        "entryPoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Entry point to your application, which is typically the location of the runtime executable.\n",
          "language": {
            "python": {
              "mapCase": false
            }
          }
        },
        "workingDirectory": {
          "type": "string",
          "description": "Working directory.\n",
          "language": {
            "python": {
              "mapCase": false
            }
          }
        }
      },
      "type": "object"
    },
    "aws:lambda/FunctionTracingConfig:FunctionTracingConfig": {
      "properties": {
        "mode": {
          "type": "string",
          "description": "Whether to to sample and trace a subset of <<shortened>>bda will call X-Ray for a tracing decision.\n",
          "language": {
            "python": {
              "mapCase": false
            }
          }
        }
      },
      "type": "object",
      "required": [
        "mode"
      ]
    },
    "aws:lambda/FunctionVpcConfig:FunctionVpcConfig": {
      "properties": {
        "securityGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of security group IDs associated with the Lambda function.\n",
          "language": {
            "python": {
              "mapCase": false
            }
          }
        },
        "subnetIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of subnet IDs associated with the Lambda function.\n",
          "language": {
            "python": {
              "mapCase": false
            }
          }
        },
        "vpcId": {
          "type": "string",
          "language": {
            "python": {
              "mapCase": false
            }
          }
        }
      },
      "type": "object",
      "required": [
        "securityGroupIds",
        "subnetIds"
      ],
      "language": {
        "nodejs": {
          "requiredOutputs": [
            "securityGroupIds",
            "subnetIds",
            "vpcId"
          ]
        }
      }
    },
    "aws:lambda/Runtime:Runtime": {
      "description": "See https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html",
      "type": "string",
      "enum": [
        {
          "name": "DotnetCore2d1",
          "value": "dotnetcore2.1",
          "deprecationMessage": "This runtime is now deprecated"
        },
        {
          "name": "DotnetCore3d1",
          "value": "dotnetcore3.1"
        },
        {
          "name": "Dotnet6",
          "value": "dotnet6"
        },
        {
          "name": "Go1dx",
          "value": "go1.x"
        },
        {
          "name": "Java8",
          "value": "java8"
        },
        {
          "name": "Java8AL2",
          "value": "java8.al2"
        },
        {
          "name": "Java11",
          "value": "java11"
        },
        {
          "name": "Ruby2d5",
          "value": "ruby2.5",
          "deprecationMessage": "This runtime is now deprecated"
        },
        {
          "name": "Ruby2d7",
          "value": "ruby2.7"
        },
        {
          "name": "NodeJS10dX",
          "value": "nodejs10.x",
          "deprecationMessage": "This runtime is now deprecated"
        },
        {
          "name": "NodeJS12dX",
          "value": "nodejs12.x"
        },
        {
          "name": "NodeJS14dX",
          "value": "nodejs14.x"
        },
        {
          "name": "NodeJS16dX",
          "value": "nodejs16.x"
        },
        {
          "name": "Python2d7",
          "value": "python2.7",
          "deprecationMessage": "This runtime is now deprecated"
        },
        {
          "name": "Python3d6",
          "value": "python3.6"
        },
        {
          "name": "Python3d7",
          "value": "python3.7"
        },
        {
          "name": "Python3d8",
          "value": "python3.8"
        },
        {
          "name": "Python3d9",
          "value": "python3.9"
        },
        {
          "name": "Custom",
          "value": "provided"
        },
        {
          "name": "CustomAL2",
          "value": "provided.al2"
        }
      ]
    }
  },
  "resources": {
    "aws:lambda/function:Function": {
      "description": "Provides a Lambda Function resource. Lambda<<shortened>>n test_lambda my_test_lambda_function\n```\n\n ",
      "properties": {
        "architectures": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Instruction set architecture for your Lambd<<shortened>>ute, function's architecture stay the same.\n"
        },
        "arn": {
          "type": "string",
          "description": "Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.\n"
        },
        "code": {
          "$ref": "pulumi.json#/Archive",
          "description": "Path to the function's deployment package w<<shortened>>bucket`, `s3_key`, and `s3_object_version`.\n"
        },
        "codeSigningConfigArn": {
          "type": "string",
          "description": "To enable code signing for this function, s<<shortened>>e the trusted publishers for this function.\n"
        },
        "deadLetterConfig": {
          "$ref": "#/types/aws:lambda/FunctionDeadLetterConfig:FunctionDeadLetterConfig",
          "description": "Configuration block. Detailed below.\n"
        },
        "description": {
          "type": "string",
          "description": "Description of what your Lambda Function does.\n"
        },
        "environment": {
          "$ref": "#/types/aws:lambda/FunctionEnvironment:FunctionEnvironment",
          "description": "Configuration block. Detailed below.\n"
        },
        "ephemeralStorage": {
          "$ref": "#/types/aws:lambda/FunctionEphemeralStorage:FunctionEphemeralStorage",
          "description": "The amount of Ephemeral storage(`/tmp`) to <<shortened>> default amount of `512`MB. Detailed below.\n"
        },
        "fileSystemConfig": {
          "$ref": "#/types/aws:lambda/FunctionFileSystemConfig:FunctionFileSystemConfig",
          "description": "Configuration block. Detailed below.\n"
        },
        "handler": {
          "type": "string",
          "description": "Function [entrypoint](https://docs.aws.amaz<<shortened>>ts-create-test-function.html) in your code.\n"
        },
        "imageConfig": {
          "$ref": "#/types/aws:lambda/FunctionImageConfig:FunctionImageConfig",
          "description": "Configuration block. Detailed below.\n"
        },
        "imageUri": {
          "type": "string",
          "description": "ECR image URI containing the function's dep<<shortened>>bucket`, `s3_key`, and `s3_object_version`.\n"
        },
        "invokeArn": {
          "type": "string",
          "description": "ARN to be used for invoking Lambda Function<<shortened>>ed in `aws.apigateway.Integration`'s `uri`.\n"
        },
        "kmsKeyArn": {
          "type": "string",
          "description": "Amazon Resource Name (ARN) of the AWS Key M<<shortened>>tual difference, remove this configuration.\n"
        },
        "lastModified": {
          "type": "string",
          "description": "Date this resource was last modified.\n"
        },
        "layers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Lambda Layer Version ARNs (maximum <<shortened>>lambda/latest/dg/configuration-layers.html)\n"
        },
        "memorySize": {
          "type": "integer",
          "description": "Amount of memory in MB your Lambda Function<<shortened>>ws.amazon.com/lambda/latest/dg/limits.html)\n"
        },
        "name": {
          "type": "string",
          "description": "Unique name for your Lambda Function.\n"
        },
        "packageType": {
          "type": "string",
          "description": "Lambda deployment package type. Valid values are `Zip` and `Image`. Defaults to `Zip`.\n"
        },
        "publish": {
          "type": "boolean",
          "description": "Whether to publish creation/change as new Lambda Function Version. Defaults to `false`.\n"
        },
        "qualifiedArn": {
          "type": "string",
          "description": "ARN identifying your Lambda Function Version (if versioning is enabled via `publish = true`).\n"
        },
        "qualifiedInvokeArn": {
          "type": "string",
          "description": "Qualified ARN (ARN with lambda version numb<<shortened>>ws/r/api_gateway_integration.html)'s `uri`.\n"
        },
        "reservedConcurrentExecutions": {
          "type": "integer",
          "description": "Amount of reserved concurrent executions fo<<shortened>>ambda/latest/dg/concurrent-executions.html)\n"
        },
        "role": {
          "type": "string",
          "$ref": "#/types/aws:index/aRN:ARN",
          "description": "Amazon Resource Name (ARN) of the function'<<shortened>>y and access to AWS services and resources.\n"
        },
        "runtime": {
          "type": "string",
          "description": "Identifier of the function's runtime. See [<<shortened>>Function-request-Runtime) for valid values.\n"
        },
        "s3Bucket": {
          "type": "string",
          "description": "S3 bucket location containing the function'<<shortened>>where you are creating the Lambda function.\n"
        },
        "s3Key": {
          "type": "string",
          "description": "S3 key of an object containing the function<<shortened>> Conflicts with `filename` and `image_uri`.\n"
        },
        "s3ObjectVersion": {
          "type": "string",
          "description": "Object version containing the function's de<<shortened>> Conflicts with `filename` and `image_uri`.\n"
        },
        "signingJobArn": {
          "type": "string",
          "description": "ARN of the signing job.\n"
        },
        "signingProfileVersionArn": {
          "type": "string",
          "description": "ARN of the signing profile version.\n"
        },
        "sourceCodeHash": {
          "type": "string",
          "description": "Used to trigger updates. Must be set to a b<<shortened>>name of the lambda function source archive.\n"
        },
        "sourceCodeSize": {
          "type": "integer",
          "description": "Size in bytes of the function .zip file.\n"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of tags to assign to the object. If con<<shortened>>rwrite those defined at the provider-level.\n"
        },
        "tagsAll": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of tags assigned to the resource, inc<<shortened>>rovider `default_tags` configuration block.\n"
        },
        "timeout": {
          "type": "integer",
          "description": "Amount of time your Lambda Function has to <<shortened>>s.amazon.com/lambda/latest/dg/limits.html).\n"
        },
        "tracingConfig": {
          "$ref": "#/types/aws:lambda/FunctionTracingConfig:FunctionTracingConfig",
          "description": "Configuration block. Detailed below.\n"
        },
        "version": {
          "type": "string",
          "description": "Latest published version of your Lambda Function.\n* `vpc_config.vpc_id` - ID of the VPC.\n"
        },
        "vpcConfig": {
          "$ref": "#/types/aws:lambda/FunctionVpcConfig:FunctionVpcConfig",
          "description": "Configuration block. Detailed below.\n"
        }
      },
      "required": [
        "architectures",
        "arn",
        "ephemeralStorage",
        "name",
        "invokeArn",
        "lastModified",
        "qualifiedArn",
        "qualifiedInvokeArn",
        "role",
        "signingJobArn",
        "signingProfileVersionArn",
        "sourceCodeHash",
        "sourceCodeSize",
        "tagsAll",
        "tracingConfig",
        "version"
      ],
      "inputProperties": {
        "architectures": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Instruction set architecture for your Lambd<<shortened>>ute, function's architecture stay the same.\n"
        },
        "code": {
          "$ref": "pulumi.json#/Archive",
          "description": "Path to the function's deployment package w<<shortened>>bucket`, `s3_key`, and `s3_object_version`.\n"
        },
        "codeSigningConfigArn": {
          "type": "string",
          "description": "To enable code signing for this function, s<<shortened>>e the trusted publishers for this function.\n"
        },
        "deadLetterConfig": {
          "$ref": "#/types/aws:lambda/FunctionDeadLetterConfig:FunctionDeadLetterConfig",
          "description": "Configuration block. Detailed below.\n"
        },
        "description": {
          "type": "string",
          "description": "Description of what your Lambda Function does.\n"
        },
        "environment": {
          "$ref": "#/types/aws:lambda/FunctionEnvironment:FunctionEnvironment",
          "description": "Configuration block. Detailed below.\n"
        },
        "ephemeralStorage": {
          "$ref": "#/types/aws:lambda/FunctionEphemeralStorage:FunctionEphemeralStorage",
          "description": "The amount of Ephemeral storage(`/tmp`) to <<shortened>> default amount of `512`MB. Detailed below.\n"
        },
        "fileSystemConfig": {
          "$ref": "#/types/aws:lambda/FunctionFileSystemConfig:FunctionFileSystemConfig",
          "description": "Configuration block. Detailed below.\n"
        },
        "handler": {
          "type": "string",
          "description": "Function [entrypoint](https://docs.aws.amaz<<shortened>>ts-create-test-function.html) in your code.\n"
        },
        "imageConfig": {
          "$ref": "#/types/aws:lambda/FunctionImageConfig:FunctionImageConfig",
          "description": "Configuration block. Detailed below.\n"
        },
        "imageUri": {
          "type": "string",
          "description": "ECR image URI containing the function's dep<<shortened>>bucket`, `s3_key`, and `s3_object_version`.\n"
        },
        "kmsKeyArn": {
          "type": "string",
          "description": "Amazon Resource Name (ARN) of the AWS Key M<<shortened>>tual difference, remove this configuration.\n"
        },
        "layers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Lambda Layer Version ARNs (maximum <<shortened>>lambda/latest/dg/configuration-layers.html)\n"
        },
        "memorySize": {
          "type": "integer",
          "description": "Amount of memory in MB your Lambda Function<<shortened>>ws.amazon.com/lambda/latest/dg/limits.html)\n"
        },
        "name": {
          "type": "string",
          "description": "Unique name for your Lambda Function.\n",
          "willReplaceOnChanges": true
        },
        "packageType": {
          "type": "string",
          "description": "Lambda deployment package type. Valid values are `Zip` and `Image`. Defaults to `Zip`.\n",
          "willReplaceOnChanges": true
        },
        "publish": {
          "type": "boolean",
          "description": "Whether to publish creation/change as new Lambda Function Version. Defaults to `false`.\n"
        },
        "reservedConcurrentExecutions": {
          "type": "integer",
          "description": "Amount of reserved concurrent executions fo<<shortened>>ambda/latest/dg/concurrent-executions.html)\n"
        },
        "role": {
          "type": "string",
          "$ref": "#/types/aws:index/aRN:ARN",
          "description": "Amazon Resource Name (ARN) of the function'<<shortened>>y and access to AWS services and resources.\n"
        },
        "runtime": {
          "type": "string",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "string",
              "$ref": "#/types/aws:lambda/Runtime:Runtime"
            }
          ],
          "description": "Identifier of the function's runtime. See [<<shortened>>Function-request-Runtime) for valid values.\n"
        },
        "s3Bucket": {
          "type": "string",
          "description": "S3 bucket location containing the function'<<shortened>>where you are creating the Lambda function.\n"
        },
        "s3Key": {
          "type": "string",
          "description": "S3 key of an object containing the function<<shortened>> Conflicts with `filename` and `image_uri`.\n"
        },
        "s3ObjectVersion": {
          "type": "string",
          "description": "Object version containing the function's de<<shortened>> Conflicts with `filename` and `image_uri`.\n"
        },
        "sourceCodeHash": {
          "type": "string",
          "description": "Used to trigger updates. Must be set to a b<<shortened>>name of the lambda function source archive.\n"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of tags to assign to the object. If con<<shortened>>rwrite those defined at the provider-level.\n"
        },
        "tagsAll": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of tags assigned to the resource, inc<<shortened>>rovider `default_tags` configuration block.\n"
        },
        "timeout": {
          "type": "integer",
          "description": "Amount of time your Lambda Function has to <<shortened>>s.amazon.com/lambda/latest/dg/limits.html).\n"
        },
        "tracingConfig": {
          "$ref": "#/types/aws:lambda/FunctionTracingConfig:FunctionTracingConfig",
          "description": "Configuration block. Detailed below.\n"
        },
        "vpcConfig": {
          "$ref": "#/types/aws:lambda/FunctionVpcConfig:FunctionVpcConfig",
          "description": "Configuration block. Detailed below.\n"
        }
      },
      "requiredInputs": [
        "role"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering Function resources.\n",
        "properties": {
          "architectures": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Instruction set architecture for your Lambd<<shortened>>ute, function's architecture stay the same.\n"
          },
          "arn": {
            "type": "string",
            "description": "Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.\n"
          },
          "code": {
            "$ref": "pulumi.json#/Archive",
            "description": "Path to the function's deployment package w<<shortened>>bucket`, `s3_key`, and `s3_object_version`.\n"
          },
          "codeSigningConfigArn": {
            "type": "string",
            "description": "To enable code signing for this function, s<<shortened>>e the trusted publishers for this function.\n"
          },
          "deadLetterConfig": {
            "$ref": "#/types/aws:lambda/FunctionDeadLetterConfig:FunctionDeadLetterConfig",
            "description": "Configuration block. Detailed below.\n"
          },
          "description": {
            "type": "string",
            "description": "Description of what your Lambda Function does.\n"
          },
          "environment": {
            "$ref": "#/types/aws:lambda/FunctionEnvironment:FunctionEnvironment",
            "description": "Configuration block. Detailed below.\n"
          },
          "ephemeralStorage": {
            "$ref": "#/types/aws:lambda/FunctionEphemeralStorage:FunctionEphemeralStorage",
            "description": "The amount of Ephemeral storage(`/tmp`) to <<shortened>> default amount of `512`MB. Detailed below.\n"
          },
          "fileSystemConfig": {
            "$ref": "#/types/aws:lambda/FunctionFileSystemConfig:FunctionFileSystemConfig",
            "description": "Configuration block. Detailed below.\n"
          },
          "handler": {
            "type": "string",
            "description": "Function [entrypoint](https://docs.aws.amaz<<shortened>>ts-create-test-function.html) in your code.\n"
          },
          "imageConfig": {
            "$ref": "#/types/aws:lambda/FunctionImageConfig:FunctionImageConfig",
            "description": "Configuration block. Detailed below.\n"
          },
          "imageUri": {
            "type": "string",
            "description": "ECR image URI containing the function's dep<<shortened>>bucket`, `s3_key`, and `s3_object_version`.\n"
          },
          "invokeArn": {
            "type": "string",
            "description": "ARN to be used for invoking Lambda Function<<shortened>>ed in `aws.apigateway.Integration`'s `uri`.\n"
          },
          "kmsKeyArn": {
            "type": "string",
            "description": "Amazon Resource Name (ARN) of the AWS Key M<<shortened>>tual difference, remove this configuration.\n"
          },
          "lastModified": {
            "type": "string",
            "description": "Date this resource was last modified.\n"
          },
          "layers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of Lambda Layer Version ARNs (maximum <<shortened>>lambda/latest/dg/configuration-layers.html)\n"
          },
          "memorySize": {
            "type": "integer",
            "description": "Amount of memory in MB your Lambda Function<<shortened>>ws.amazon.com/lambda/latest/dg/limits.html)\n"
          },
          "name": {
            "type": "string",
            "description": "Unique name for your Lambda Function.\n",
            "willReplaceOnChanges": true
          },
          "packageType": {
            "type": "string",
            "description": "Lambda deployment package type. Valid values are `Zip` and `Image`. Defaults to `Zip`.\n",
            "willReplaceOnChanges": true
          },
          "publish": {
            "type": "boolean",
            "description": "Whether to publish creation/change as new Lambda Function Version. Defaults to `false`.\n"
          },
          "qualifiedArn": {
            "type": "string",
            "description": "ARN identifying your Lambda Function Version (if versioning is enabled via `publish = true`).\n"
          },
          "qualifiedInvokeArn": {
            "type": "string",
            "description": "Qualified ARN (ARN with lambda version numb<<shortened>>ws/r/api_gateway_integration.html)'s `uri`.\n"
          },
          "reservedConcurrentExecutions": {
            "type": "integer",
            "description": "Amount of reserved concurrent executions fo<<shortened>>ambda/latest/dg/concurrent-executions.html)\n"
          },
          "role": {
            "type": "string",
            "$ref": "#/types/aws:index/aRN:ARN",
            "description": "Amazon Resource Name (ARN) of the function'<<shortened>>y and access to AWS services and resources.\n"
          },
          "runtime": {
            "type": "string",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "$ref": "#/types/aws:lambda/Runtime:Runtime"
              }
            ],
            "description": "Identifier of the function's runtime. See [<<shortened>>Function-request-Runtime) for valid values.\n"
          },
          "s3Bucket": {
            "type": "string",
            "description": "S3 bucket location containing the function'<<shortened>>where you are creating the Lambda function.\n"
          },
          "s3Key": {
            "type": "string",
            "description": "S3 key of an object containing the function<<shortened>> Conflicts with `filename` and `image_uri`.\n"
          },
          "s3ObjectVersion": {
            "type": "string",
            "description": "Object version containing the function's de<<shortened>> Conflicts with `filename` and `image_uri`.\n"
          },
          "signingJobArn": {
            "type": "string",
            "description": "ARN of the signing job.\n"
          },
          "signingProfileVersionArn": {
            "type": "string",
            "description": "ARN of the signing profile version.\n"
          },
          "sourceCodeHash": {
            "type": "string",
            "description": "Used to trigger updates. Must be set to a b<<shortened>>name of the lambda function source archive.\n"
          },
          "sourceCodeSize": {
            "type": "integer",
            "description": "Size in bytes of the function .zip file.\n"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map of tags to assign to the object. If con<<shortened>>rwrite those defined at the provider-level.\n"
          },
          "tagsAll": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map of tags assigned to the resource, inc<<shortened>>rovider `default_tags` configuration block.\n"
          },
          "timeout": {
            "type": "integer",
            "description": "Amount of time your Lambda Function has to <<shortened>>s.amazon.com/lambda/latest/dg/limits.html).\n"
          },
          "tracingConfig": {
            "$ref": "#/types/aws:lambda/FunctionTracingConfig:FunctionTracingConfig",
            "description": "Configuration block. Detailed below.\n"
          },
          "version": {
            "type": "string",
            "description": "Latest published version of your Lambda Function.\n* `vpc_config.vpc_id` - ID of the VPC.\n"
          },
          "vpcConfig": {
            "$ref": "#/types/aws:lambda/FunctionVpcConfig:FunctionVpcConfig",
            "description": "Configuration block. Detailed below.\n"
          }
        },
        "type": "object"
      }
    }
  },
  "functions": {
    "aws:fsx/getOpenZfsSnapshot:getOpenZfsSnapshot": {
      "description": "Use this data source to get information abo<<shortened>> true\n```\n{{% /example %}}\n{{% /examples %}}",
      "inputs": {
        "description": "A collection of arguments for invoking getOpenZfsSnapshot.\n",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/types/aws:fsx/getOpenZfsSnapshotFilter:getOpenZfsSnapshotFilter"
            },
            "description": "One or more name/value pairs to filter off of. The\nsupported names are file-system-id or volume-id.\n"
          },
          "mostRecent": {
            "type": "boolean",
            "description": "If more than one result is returned, use the most recent snapshot.\n"
          },
          "name": {
            "type": "string",
            "description": "Name of the snapshot.\n"
          },
          "snapshotIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Returns information on a specific snapshot_id.\n"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "List of Tag values, with a maximum of 50 elements.\n"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getOpenZfsSnapshot.\n",
        "properties": {
          "arn": {
            "type": "string",
            "description": "Amazon Resource Name of the snapshot.\n"
          },
          "creationTime": {
            "type": "string",
            "description": "Time that the resource was created.\n"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/types/aws:fsx/getOpenZfsSnapshotFilter:getOpenZfsSnapshotFilter"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "mostRecent": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "description": "Name of the snapshot.\n"
          },
          "snapshotId": {
            "type": "string",
            "description": "ID of the snapshot.\n"
          },
          "snapshotIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "List of Tag values, with a maximum of 50 elements.\n"
          },
          "volumeId": {
            "type": "string",
            "description": "ID of the volume that the snapshot is of.\n"
          }
        },
        "type": "object",
        "required": [
          "arn",
          "creationTime",
          "snapshotId",
          "tags",
          "volumeId",
          "id"
        ]
      }
    }
  }
}
